"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlasmicCanvasHost = exports.renderStudioIntoIframe = void 0;
var react_1 = __importStar(require("react"));
function ensure(x) {
    if (x === null || x === undefined) {
        debugger;
        throw new Error("Value must not be undefined or null");
    }
    else {
        return x;
    }
}
function renderStudioIntoIframe() {
    var script = document.createElement("script");
    var params = new URL("https://fakeurl/" + location.hash.replace(/#/, "?"))
        .searchParams;
    var plasmicOrigin = ensure(params.get("origin"));
    script.src = plasmicOrigin + "/static/js/studio.js";
    document.body.appendChild(script);
}
exports.renderStudioIntoIframe = renderStudioIntoIframe;
function PlasmicCanvasHost() {
    react_1.useEffect(function () {
        if (!document.querySelector("#plasmic-studio-tag") &&
            !location.hash.match(/\bcanvas=true\b/)) {
            renderStudioIntoIframe();
        }
    }, []);
    return react_1.default.createElement("div", { className: "plasmic-canvas-host" });
}
exports.PlasmicCanvasHost = PlasmicCanvasHost;
