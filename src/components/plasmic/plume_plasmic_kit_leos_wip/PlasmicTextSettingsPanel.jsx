// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 4k5VUvYN9ByL8a1GrrWDBZ
// Component: CMgljSlVD_
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import PanelHeader from "../../PanelHeader"; // plasmic-import: rKiCb_UlEW/component
import FieldLabel from "../../FieldLabel"; // plasmic-import: d5Ll5vwAWQ/component
import TextField from "../../TextField"; // plasmic-import: YA4SST2evAJC/component
import Divider from "../../Divider"; // plasmic-import: 93-pxCA2jD/component
import TextAreaField from "../../TextAreaField"; // plasmic-import: p-JdsWKcXx/component
import Button from "../../Button"; // plasmic-import: 0PjHSFlclC74/component
import Checkbox from "../../Checkbox"; // plasmic-import: Zj94HcL0zZk4/component
import "@plasmicapp/react-web/lib/plasmic.css";
import defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import projectcss from "./plasmic_plume_plasmic_kit_leos_wip.module.css"; // plasmic-import: 4k5VUvYN9ByL8a1GrrWDBZ/projectcss
import sty from "./PlasmicTextSettingsPanel.module.css"; // plasmic-import: CMgljSlVD_/css
import Icon7Icon from "./icons/PlasmicIcon__Icon7"; // plasmic-import: dqodewSdWI/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: sLYQKxFjVe/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: dUnstzXL-B/icon
import Icon10Icon from "./icons/PlasmicIcon__Icon10"; // plasmic-import: 5J7ARMZDAr/icon
import Icon11Icon from "./icons/PlasmicIcon__Icon11"; // plasmic-import: PJg7SQfl5y/icon
import Icon12Icon from "./icons/PlasmicIcon__Icon12"; // plasmic-import: aiRD4WfJR3/icon
import Icon19Icon from "./icons/PlasmicIcon__Icon19"; // plasmic-import: SEa8qoYKco/icon
import Icon13Icon from "./icons/PlasmicIcon__Icon13"; // plasmic-import: dD0bMZRwWM/icon
import Icon14Icon from "./icons/PlasmicIcon__Icon14"; // plasmic-import: 0p5bMdhx2H/icon
import Icon15Icon from "./icons/PlasmicIcon__Icon15"; // plasmic-import: oywJ0kn7ls/icon
import Icon16Icon from "./icons/PlasmicIcon__Icon16"; // plasmic-import: 9JhQCHJPmZ/icon
import Icon20Icon from "./icons/PlasmicIcon__Icon20"; // plasmic-import: BZLw2cyA1y/icon

export const PlasmicTextSettingsPanel__VariantProps = new Array();

export const PlasmicTextSettingsPanel__ArgProps = new Array();

function PlasmicTextSettingsPanel__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <PanelHeader
        data-plasmic-name={"panelHeader"}
        data-plasmic-override={overrides.panelHeader}
        className={classNames("__wab_instance", sty.panelHeader)}
      />

      <div className={classNames(defaultcss.all, sty.box___6W4U)}>
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.box___8YDoi)}
        >
          <FieldLabel
            className={classNames("__wab_instance", sty.fieldLabel___5RZwb)}
            startIcon={
              <Icon7Icon
                className={classNames(defaultcss.all, sty.svg__eo9Ws)}
                role={"img"}
              />
            }
          >
            {"Color"}
          </FieldLabel>

          <TextField
            className={classNames("__wab_instance", sty.textField__zrjgp)}
            endIcon={
              <Icon2Icon
                className={classNames(defaultcss.all, sty.svg__lcuzu)}
                role={"img"}
              />
            }
            label={"Text Label"}
            startIcon={
              <Icon7Icon
                className={classNames(defaultcss.all, sty.svg___5Fey)}
                role={"img"}
              />
            }
            val={"#000000"}
            withIcons={["end"]}
          />
        </p.Stack>

        <Divider className={classNames("__wab_instance", sty.divider__se3Rx)} />

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.box__hw1Mz)}
        >
          <FieldLabel
            className={classNames("__wab_instance", sty.fieldLabel___5YYmJ)}
          >
            {"Content"}
          </FieldLabel>

          <TextAreaField
            data-plasmic-name={"textAreaField"}
            data-plasmic-override={overrides.textAreaField}
            className={classNames("__wab_instance", sty.textAreaField)}
          />
        </p.Stack>

        <Divider className={classNames("__wab_instance", sty.divider__wvJX)} />

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.box___0OPEa)}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.box__pWvhm)}
          >
            <FieldLabel
              className={classNames("__wab_instance", sty.fieldLabel__uhSKm)}
            >
              {"Family"}
            </FieldLabel>

            <TextField
              className={classNames("__wab_instance", sty.textField__ovoC)}
              endIcon={
                <Icon2Icon
                  className={classNames(defaultcss.all, sty.svg__nNph)}
                  role={"img"}
                />
              }
              label={"Text Label"}
              startIcon={
                <Icon7Icon
                  className={classNames(defaultcss.all, sty.svg__to34Z)}
                  role={"img"}
                />
              }
              val={"Roboto"}
              withIcons={["end"]}
            />
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.box__rfLad)}
          >
            <FieldLabel
              className={classNames("__wab_instance", sty.fieldLabel__vQo6H)}
            >
              {"Size"}
            </FieldLabel>

            <TextField
              className={classNames("__wab_instance", sty.textField__eZcee)}
              endIcon={
                <Icon2Icon
                  data-plasmic-name={"end2"}
                  data-plasmic-override={overrides.end2}
                  className={classNames(defaultcss.all, sty.end2)}
                  role={"img"}
                />
              }
              label={"Text Label"}
              startIcon={
                <Icon7Icon
                  data-plasmic-name={"start2"}
                  data-plasmic-override={overrides.start2}
                  className={classNames(defaultcss.all, sty.start2)}
                  role={"img"}
                />
              }
              val={"16"}
              withIcons={["end"]}
            />

            <div className={classNames(defaultcss.all, sty.box__sIikM)}>
              <Button
                alt={"No text decoration"}
                endIcon={
                  <Icon3Icon
                    className={classNames(defaultcss.all, sty.svg__tyNXf)}
                    role={"img"}
                  />
                }
                startIcon={
                  <Icon3Icon
                    className={classNames(defaultcss.all, sty.svg__mhMr1)}
                    role={"img"}
                  />
                }
                type={["smallerPadding"]}
                withIcons={["start", "noLabel"]}
              >
                {"Button"}
              </Button>

              <Button
                alt={"Underline"}
                endIcon={
                  <Icon3Icon
                    className={classNames(defaultcss.all, sty.svg__fgg43)}
                    role={"img"}
                  />
                }
                startIcon={
                  <Icon10Icon
                    className={classNames(defaultcss.all, sty.svg___24Hhl)}
                    role={"img"}
                  />
                }
                type={["flat", "smallerPadding"]}
                withIcons={["start", "noLabel"]}
              >
                {"Button"}
              </Button>

              <Button
                alt={"More decorationsâ€¦"}
                endIcon={
                  <Icon3Icon
                    className={classNames(defaultcss.all, sty.svg__siNlk)}
                    role={"img"}
                  />
                }
                startIcon={
                  <Icon11Icon
                    className={classNames(defaultcss.all, sty.svg___8D6Pg)}
                    role={"img"}
                  />
                }
                type={["flat", "smallerPadding"]}
                withIcons={["start", "noLabel"]}
              >
                {"Button"}
              </Button>
            </div>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.box___79Wg)}
          >
            <FieldLabel
              className={classNames("__wab_instance", sty.fieldLabel__pFohi)}
            >
              {"Weight"}
            </FieldLabel>

            <TextField
              alt={"Normal"}
              className={classNames("__wab_instance", sty.textField__myLdM)}
              endIcon={
                <Icon2Icon
                  data-plasmic-name={"end22"}
                  data-plasmic-override={overrides.end22}
                  className={classNames(defaultcss.all, sty.end22)}
                  role={"img"}
                />
              }
              label={"Text Label"}
              startIcon={
                <Icon7Icon
                  data-plasmic-name={"start22"}
                  data-plasmic-override={overrides.start22}
                  className={classNames(defaultcss.all, sty.start22)}
                  role={"img"}
                />
              }
              val={"400"}
              withIcons={["end"]}
            />

            <div className={classNames(defaultcss.all, sty.box__v6Vx)}>
              <Button
                alt={"No font style"}
                endIcon={
                  <Icon3Icon
                    className={classNames(defaultcss.all, sty.svg__lgKai)}
                    role={"img"}
                  />
                }
                startIcon={
                  <Icon3Icon
                    className={classNames(defaultcss.all, sty.svg__z2Pg0)}
                    role={"img"}
                  />
                }
                type={["smallerPadding"]}
                withIcons={["start", "noLabel"]}
              >
                {"Button"}
              </Button>

              <Button
                alt={"Italic"}
                endIcon={
                  <Icon3Icon
                    className={classNames(defaultcss.all, sty.svg__vwkcr)}
                    role={"img"}
                  />
                }
                startIcon={
                  <Icon12Icon
                    className={classNames(defaultcss.all, sty.svg__yxJfx)}
                    role={"img"}
                  />
                }
                type={["flat", "smallerPadding"]}
                withIcons={["start", "noLabel"]}
              >
                {"Button"}
              </Button>
            </div>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.box___2Rsv2)}
          >
            <FieldLabel
              alt={"Line height"}
              className={classNames("__wab_instance", sty.fieldLabel__fpCov)}
              startIcon={
                <Icon19Icon
                  className={classNames(defaultcss.all, sty.svg__wuyHg)}
                  role={"img"}
                />
              }
              withIcons={["startIcon", "noLabel"]}
            >
              {"Height"}
            </FieldLabel>

            <TextField
              alt={"Normal"}
              className={classNames("__wab_instance", sty.textField__mRuJw)}
              endIcon={
                <Icon2Icon
                  data-plasmic-name={"end222"}
                  data-plasmic-override={overrides.end222}
                  className={classNames(defaultcss.all, sty.end222)}
                  role={"img"}
                />
              }
              label={"Text Label"}
              startIcon={
                <Icon7Icon
                  data-plasmic-name={"start222"}
                  data-plasmic-override={overrides.start222}
                  className={classNames(defaultcss.all, sty.start222)}
                  role={"img"}
                />
              }
              val={"1.5"}
              withIcons={["end"]}
            />

            <div className={classNames(defaultcss.all, sty.box__whgcx)}>
              <Button
                alt={"No font style"}
                endIcon={
                  <Icon3Icon
                    className={classNames(defaultcss.all, sty.svg__cQwnQ)}
                    role={"img"}
                  />
                }
                startIcon={
                  <Icon13Icon
                    className={classNames(defaultcss.all, sty.svg__plbCf)}
                    role={"img"}
                  />
                }
                type={["smallerPadding"]}
                withIcons={["start", "noLabel"]}
              >
                {"Button"}
              </Button>

              <Button
                alt={"Italic"}
                endIcon={
                  <Icon3Icon
                    className={classNames(defaultcss.all, sty.svg__qaWl5)}
                    role={"img"}
                  />
                }
                startIcon={
                  <Icon14Icon
                    className={classNames(defaultcss.all, sty.svg__fe6Tg)}
                    role={"img"}
                  />
                }
                type={["flat", "smallerPadding"]}
                withIcons={["start", "noLabel"]}
              >
                {"Button"}
              </Button>

              <Button
                alt={"Italic"}
                endIcon={
                  <Icon3Icon
                    className={classNames(defaultcss.all, sty.svg__xvF2L)}
                    role={"img"}
                  />
                }
                startIcon={
                  <Icon15Icon
                    className={classNames(defaultcss.all, sty.svg__zofMw)}
                    role={"img"}
                  />
                }
                type={["flat", "smallerPadding"]}
                withIcons={["start", "noLabel"]}
              >
                {"Button"}
              </Button>

              <Button
                alt={"Italic"}
                endIcon={
                  <Icon3Icon
                    className={classNames(defaultcss.all, sty.svg__evOlu)}
                    role={"img"}
                  />
                }
                startIcon={
                  <Icon16Icon
                    className={classNames(defaultcss.all, sty.svg__hSmhj)}
                    role={"img"}
                  />
                }
                type={["flat", "smallerPadding"]}
                withIcons={["start", "noLabel"]}
              >
                {"Button"}
              </Button>
            </div>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.box__lqFqC)}
          >
            <FieldLabel
              alt={"Letter spacing"}
              className={classNames("__wab_instance", sty.fieldLabel__d26Fe)}
              startIcon={
                <Icon20Icon
                  className={classNames(defaultcss.all, sty.svg__kiYAy)}
                  role={"img"}
                />
              }
              withIcons={["startIcon", "noLabel"]}
            >
              {"Spaciâ€¦"}
            </FieldLabel>

            <TextField
              alt={"Normal"}
              className={classNames("__wab_instance", sty.textField__vvEeM)}
              endIcon={
                <Icon2Icon
                  data-plasmic-name={"end2222"}
                  data-plasmic-override={overrides.end2222}
                  className={classNames(defaultcss.all, sty.end2222)}
                  role={"img"}
                />
              }
              label={"Text Label"}
              startIcon={
                <Icon7Icon
                  data-plasmic-name={"start2222"}
                  data-plasmic-override={overrides.start2222}
                  className={classNames(defaultcss.all, sty.start2222)}
                  role={"img"}
                />
              }
              val={"--"}
              withIcons={["end"]}
            />

            <div className={classNames(defaultcss.all, sty.box___2Iky)}>
              <Button
                alt={"No font style"}
                endIcon={
                  <Icon3Icon
                    className={classNames(defaultcss.all, sty.svg__jWulX)}
                    role={"img"}
                  />
                }
                startIcon={
                  <Icon3Icon
                    className={classNames(defaultcss.all, sty.svg__xqvDe)}
                    role={"img"}
                  />
                }
                type={["smallerPadding"]}
                withIcons={["start", "noLabel"]}
              >
                {"Button"}
              </Button>

              <Button
                alt={"Italic"}
                endIcon={
                  <Icon3Icon
                    className={classNames(defaultcss.all, sty.svg___1J2EG)}
                    role={"img"}
                  />
                }
                startIcon={
                  <Icon14Icon
                    className={classNames(defaultcss.all, sty.svg__xudqp)}
                    role={"img"}
                  />
                }
                type={["flat", "smallerPadding"]}
                withIcons={["start", "noLabel"]}
              >
                {"Button"}
              </Button>

              <Button
                alt={"Italic"}
                endIcon={
                  <Icon3Icon
                    className={classNames(defaultcss.all, sty.svg__n8CXa)}
                    role={"img"}
                  />
                }
                startIcon={
                  <Icon15Icon
                    className={classNames(defaultcss.all, sty.svg__nxqHz)}
                    role={"img"}
                  />
                }
                type={["flat", "smallerPadding"]}
                withIcons={["start", "noLabel"]}
              >
                {"Button"}
              </Button>

              <Button
                alt={"Italic"}
                endIcon={
                  <Icon3Icon
                    className={classNames(defaultcss.all, sty.svg__wwj4)}
                    role={"img"}
                  />
                }
                startIcon={
                  <Icon16Icon
                    className={classNames(defaultcss.all, sty.svg__qJ1Ru)}
                    role={"img"}
                  />
                }
                type={["flat", "smallerPadding"]}
                withIcons={["start", "noLabel"]}
              >
                {"Button"}
              </Button>
            </div>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.box__dVwAf)}
          >
            <FieldLabel
              className={classNames("__wab_instance", sty.fieldLabel__mqTaS)}
              startIcon={
                <Icon20Icon
                  data-plasmic-name={"start3"}
                  data-plasmic-override={overrides.start3}
                  className={classNames(defaultcss.all, sty.start3)}
                  role={"img"}
                />
              }
            >
              {"Indent"}
            </FieldLabel>

            <TextField
              alt={"Normal"}
              className={classNames("__wab_instance", sty.textField__lNfF9)}
              endIcon={
                <Icon2Icon
                  data-plasmic-name={"end22222"}
                  data-plasmic-override={overrides.end22222}
                  className={classNames(defaultcss.all, sty.end22222)}
                  role={"img"}
                />
              }
              label={"Text Label"}
              startIcon={
                <Icon7Icon
                  data-plasmic-name={"start22222"}
                  data-plasmic-override={overrides.start22222}
                  className={classNames(defaultcss.all, sty.start22222)}
                  role={"img"}
                />
              }
              val={"--"}
              withIcons={["end"]}
            />

            <Checkbox
              data-plasmic-name={"checkbox"}
              data-plasmic-override={overrides.checkbox}
              className={classNames("__wab_instance", sty.checkbox)}
              hasLabel={"hasLabel"}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box__nT9Fl
                )}
              >
                {"Line wrap?"}
              </div>
            </Checkbox>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.box__vl9DO)}
          >
            <FieldLabel
              className={classNames("__wab_instance", sty.fieldLabel__k4Y43)}
              startIcon={
                <Icon20Icon
                  data-plasmic-name={"start32"}
                  data-plasmic-override={overrides.start32}
                  className={classNames(defaultcss.all, sty.start32)}
                  role={"img"}
                />
              }
            >
              {"Select"}
            </FieldLabel>

            <TextField
              alt={"Normal"}
              className={classNames("__wab_instance", sty.textField__vk13J)}
              endIcon={
                <Icon2Icon
                  data-plasmic-name={"end222222"}
                  data-plasmic-override={overrides.end222222}
                  className={classNames(defaultcss.all, sty.end222222)}
                  role={"img"}
                />
              }
              label={"Text Label"}
              startIcon={
                <Icon7Icon
                  data-plasmic-name={"start222222"}
                  data-plasmic-override={overrides.start222222}
                  className={classNames(defaultcss.all, sty.start222222)}
                  role={"img"}
                />
              }
              val={"Text"}
              withIcons={["end"]}
            />
          </p.Stack>
        </p.Stack>
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "panelHeader",
    "textAreaField",
    "start2",
    "end2",
    "start22",
    "end22",
    "start222",
    "end222",
    "start2222",
    "end2222",
    "start3",
    "start22222",
    "end22222",
    "checkbox",
    "start32",
    "start222222",
    "end222222"
  ],

  panelHeader: ["panelHeader"],
  textAreaField: ["textAreaField"],
  start2: ["start2"],
  end2: ["end2"],
  start22: ["start22"],
  end22: ["end22"],
  start222: ["start222"],
  end222: ["end222"],
  start2222: ["start2222"],
  end2222: ["end2222"],
  start3: ["start3"],
  start22222: ["start22222"],
  end22222: ["end22222"],
  checkbox: ["checkbox"],
  start32: ["start32"],
  start222222: ["start222222"],
  end222222: ["end222222"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicTextSettingsPanel__ArgProps,
      internalVariantPropNames: PlasmicTextSettingsPanel__VariantProps
    });

    return PlasmicTextSettingsPanel__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicTextSettingsPanel";
  } else {
    func.displayName = `PlasmicTextSettingsPanel.${nodeName}`;
  }
  return func;
}

export const PlasmicTextSettingsPanel = Object.assign(
  // Top-level PlasmicTextSettingsPanel renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    panelHeader: makeNodeComponent("panelHeader"),
    textAreaField: makeNodeComponent("textAreaField"),
    start2: makeNodeComponent("start2"),
    end2: makeNodeComponent("end2"),
    start22: makeNodeComponent("start22"),
    end22: makeNodeComponent("end22"),
    start222: makeNodeComponent("start222"),
    end222: makeNodeComponent("end222"),
    start2222: makeNodeComponent("start2222"),
    end2222: makeNodeComponent("end2222"),
    start3: makeNodeComponent("start3"),
    start22222: makeNodeComponent("start22222"),
    end22222: makeNodeComponent("end22222"),
    checkbox: makeNodeComponent("checkbox"),
    start32: makeNodeComponent("start32"),
    start222222: makeNodeComponent("start222222"),
    end222222: makeNodeComponent("end222222"),
    // Metadata about props expected for PlasmicTextSettingsPanel
    internalVariantProps: PlasmicTextSettingsPanel__VariantProps,
    internalArgProps: PlasmicTextSettingsPanel__ArgProps
  }
);

export default PlasmicTextSettingsPanel;
/* prettier-ignore-end */
