// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 4k5VUvYN9ByL8a1GrrWDBZ
// Component: leLonDPgbc
import * as React from "react";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Checkbox from "../../Checkbox"; // plasmic-import: Zj94HcL0zZk4/component
import "@plasmicapp/react-web/lib/plasmic.css";
import defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import projectcss from "./plasmic_plume_plasmic_kit_leos_wip.module.css"; // plasmic-import: 4k5VUvYN9ByL8a1GrrWDBZ/projectcss
import sty from "./PlasmicNew.module.css"; // plasmic-import: leLonDPgbc/css

export const PlasmicNew__VariantProps = new Array();

export const PlasmicNew__ArgProps = new Array("newnew");

function PlasmicNew__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        defaultcss.all,
        projectcss.root_reset,
        sty.root,
        'args.newnew !== undefined ? args.newnew : "hello"'
      )}
    >
      <Checkbox
        data-plasmic-name={"checkbox"}
        data-plasmic-override={overrides.checkbox}
        className={classNames("__wab_instance", sty.checkbox)}
      />
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root", "checkbox"],
  checkbox: ["checkbox"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicNew__ArgProps,
      internalVariantPropNames: PlasmicNew__VariantProps
    });

    return PlasmicNew__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicNew";
  } else {
    func.displayName = `PlasmicNew.${nodeName}`;
  }
  return func;
}

export const PlasmicNew = Object.assign(
  // Top-level PlasmicNew renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    checkbox: makeNodeComponent("checkbox"),
    // Metadata about props expected for PlasmicNew
    internalVariantProps: PlasmicNew__VariantProps,
    internalArgProps: PlasmicNew__ArgProps
  }
);

export default PlasmicNew;
/* prettier-ignore-end */
